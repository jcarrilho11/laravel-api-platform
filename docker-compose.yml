version: "3.9"
services:
  edge:
    image: nginx:alpine
    ports: ["8080:80"]
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on: [api-gateway]
    networks: [public, services]

  db:
    image: postgres:16
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./deploy/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports: ["5433:5432"]
    networks: [services]

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    networks: [services]

  swagger-ui-auth:
    image: swaggerapi/swagger-ui
    ports:
      - "8083:8080"
    environment:
      SWAGGER_JSON: /usr/share/nginx/html/openapi/auth.yaml
      BASE_URL: /
      VALIDATOR_URL: ""
      TRY_IT_OUT_ENABLED: "true"
      FILTER: "true"
      DEEP_LINKING: "true"
    volumes:
      - ./openapi:/usr/share/nginx/html/openapi:ro
    networks: [services]

  swagger-ui-tasks:
    image: swaggerapi/swagger-ui
    ports:
      - "8084:8080"
    environment:
      SWAGGER_JSON: /usr/share/nginx/html/openapi/tasks.yaml
      BASE_URL: /
      VALIDATOR_URL: ""
      TRY_IT_OUT_ENABLED: "true"
      FILTER: "true"
      DEEP_LINKING: "true"
    volumes:
      - ./openapi:/usr/share/nginx/html/openapi:ro
    networks: [services]

  api-gateway:
    build: { context: ./api-gateway, dockerfile: Dockerfile }
    expose: ["9000"]
    volumes:
      - ./api-gateway:/app
      - ./openapi:/openapi:ro
    environment:
      APP_ENV: production
      APP_KEY: base64:dummyKeyForLocalOnly=
      APP_DEBUG: "false"
      AUTH_BASE_URL: http://auth-service:9001
      TASKS_BASE_URL: http://tasks-service:9002
      JWT_AUD: task-api
      JWT_SECRET: dev-shared-secret
      JWT_ISS: http://auth-service
      LOG_CHANNEL: stderr
      AUTH_SERVICE_URL: http://auth-service:9001
      TASKS_SERVICE_URL: http://tasks-service:9002
      REDIS_HOST: redis
      REDIS_PORT: 6379
    command: >
      sh -lc "
        php artisan key:generate --force &&
        php artisan serve --host=0.0.0.0 --port=9000
      "
    depends_on: [auth-service, tasks-service, redis]
    networks: [services, public]

  auth-service:
    build: { context: ./auth-service, dockerfile: Dockerfile }
    expose: ["9001"]
    environment:
      APP_ENV: production
      APP_KEY: base64:dummyKeyForLocalOnly=
      APP_DEBUG: "false"
      JWT_ISS: http://auth-service
      JWT_AUD: task-api
      JWT_SECRET: dev-shared-secret
      LOG_CHANNEL: stderr
      LOG_STDERR_FORMATTER: "Monolog\\Formatter\\JsonFormatter"
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: auth_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      CACHE_DRIVER: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes: ["./auth-service:/app"]
    command: >
      sh -lc "
        php artisan key:generate --force &&
        php artisan migrate --force &&
        php artisan db:seed --force || true &&
        php artisan serve --host=0.0.0.0 --port=9001
      "
    depends_on: [db, redis]
    networks: [services]

  tasks-service:
    build: { context: ./tasks-service, dockerfile: Dockerfile }
    expose: ["9002"]
    environment:
      APP_ENV: production
      APP_KEY: base64:dummyKeyForLocalOnly=
      APP_DEBUG: "false"
      LOG_CHANNEL: stderr
      LOG_STDERR_FORMATTER: "Monolog\\Formatter\\JsonFormatter"
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: tasks_db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
      CACHE_DRIVER: redis
      REDIS_HOST: redis
      REDIS_PORT: 6379
    volumes: ["./tasks-service:/app"]
    command: >
      sh -lc "
        php artisan key:generate --force &&
        php artisan migrate --force &&
        php artisan db:seed --force || true &&
        php artisan serve --host=0.0.0.0 --port=9002
      "
    depends_on: [db, redis]
    networks: [services]

networks:
  public: {}
  services: {}

volumes:
  pgdata: {}
